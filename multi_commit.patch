From 724532b52791287245e0a135365d66bdc913aaf5 Mon Sep 17 00:00:00 2001
From: Geeta Krishna <75007299+ramswami123@users.noreply.github.com>
Date: Sun, 25 Jun 2023 16:57:18 +0530
Subject: [PATCH 1/2] Update App.tsx

---
 src/App.tsx | 23 +++++++++++++++++------
 1 file changed, 17 insertions(+), 6 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..39575ba 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph:boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,18 +31,27 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if(this.State.showGraph){
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let x=0;
+    const interval=setInterval(()=>{
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+      this.setState({
+        data: serverResponds,
+        showGraph:true,
+      });
+      x++;
+      if(x>1000){
+        clearIntrval(interval);
+      }
+    },100);
   }
 
   /**
-- 
2.33.1.windows.1


From ed201b78448f760d16b95b3b33f5871f24fdc924 Mon Sep 17 00:00:00 2001
From: Geeta Krishna <75007299+ramswami123@users.noreply.github.com>
Date: Sun, 25 Jun 2023 17:19:32 +0530
Subject: [PATCH 2/2] Update Graph.tsx

---
 src/Graph.tsx | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..781a788 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -33,7 +33,7 @@ class Graph extends Component<IProps, {}> {
   componentDidMount() {
     // Get element to attach the table from the DOM.
     const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
-
+         
     const schema = {
       stock: 'string',
       top_ask_price: 'float',
@@ -48,9 +48,18 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
 
       // Add more Perspective configurations here.
+      elem.SetAttribute('view','y_line');
+      elem.SetAttribute('column-pivots','["stock"]');
+      elem.SetAttribute('row-pivots','["stock"]');
+      elem.SetAttribute('columns','["top_ask_price"]');
+      elem.SetAttribute('aggregates',`
+                       {"stock":"distinct count",
+                        "top_ask_price":"avg",
+                        "top_bid_price":"avg",
+                       "timestamp";"distinct count"}`);
       elem.load(this.table);
     }
-  }
+     
 
   componentDidUpdate() {
     // Everytime the data props is updated, insert the data into Perspective table
-- 
2.33.1.windows.1

